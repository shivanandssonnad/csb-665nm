{"version":3,"sources":["components/Header/index.js","components/Table/CoordinateRenderer.js","components/Table/ImageRenderer.js","components/Table/NameRenderer.js","components/Table/index.js","constants.js","components/Map/Marker.js","components/Map/index.js","modules/Map/index.js","App.js","index.js"],"names":["Header","props","children","CoordinateRenderer","value","lat","lng","ImageRenderer","className","src","alt","NameRenderer","Styles","styled","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","style","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","defaultProps","TABLE_CONFIG","accessor","Cell","Marker","maps","position","onClick","details","createMarker","useCallback","removeMarker","marker","setMap","onClickMarker","useEffect","event","addListener","bind","GoogleMaps","React","Component","constructor","super","handleClickOnMap","allowClickOnMap","this","evt","latLng","onClickMap","handleCreateMap","mapsApi","initMap","center","defaultZoom","state","then","element","mapElement","Map","zoom","streetViewControl","config","setState","onUpdateParent","handleRef","componentDidMount","width","height","ref","id","propTyeps","PropTypes","func","string","object","bool","getPointers","markers","handleSaveMapConfig","initialised","handleZoomToAllPointers","pointers","length","setCenter","setZoom","bounds","LatLngBounds","forEach","pointer","extend","fitBounds","handleClickMarker","renderMarkers","handleClickMap","App","transformUserDetails","user","name","location","picture","email","parseFloat","coordinates","latitude","longitude","first","largeImage","large","mediumImage","medium","thumbnailImage","thumbnail","fetchUser","userCountsToFetch","fetch","res","json","Array","isArray","results","catch","activeMarker","tableData","push","showTable","tableColumns","users","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.0d3994c5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return <h3 {...props}>{props.children}</h3>;\n}\n\nexport default Header;\n","function CoordinateRenderer(props) {\n  const { value } = props;\n  const { lat, lng } = value || {};\n  return (\n    <div>\n      <div>Latitude: {lat}</div>\n      <div>Longitude: {lng}</div>\n    </div>\n  );\n}\n\nexport default CoordinateRenderer;\n","function ImageRenderer(props) {\n  return (\n    <div className=\"display-center\">\n      <img src={props.value} alt=\"profile\" />\n    </div>\n  );\n}\n\nexport default ImageRenderer;\n","function NameRenderer(props) {\n  return props.value;\n}\n\nexport default NameRenderer;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport CoordinateRenderer from \"./CoordinateRenderer\";\nimport ImageRenderer from \"./ImageRenderer\";\nimport NameRenderer from \"./NameRenderer\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`;\n\nfunction Table(props) {\n  const { columns, data, className } = props;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({ columns, data });\n\n  return (\n    <Styles className={className}>\n      <div className=\"tableWrap\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...column.getHeaderProps()}\n                    style={{\n                      background: \"aliceblue\",\n                      color: \"black\",\n                      fontWeight: \"bold\"\n                    }}\n                  >\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: \"10px\"\n                        }}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Styles>\n  );\n}\n\nTable.defaultProps = {\n  columns: [],\n  data: []\n};\n\nTable.NameRenderer = NameRenderer;\nTable.ImageRenderer = ImageRenderer;\nTable.CoordinateRenderer = CoordinateRenderer;\n\nexport default Table;\n","import Table from \"./components/Table\";\n\nexport const USER_COUNT_TO_FETCH = 3;\n\nexport const TABLE_CONFIG = [\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n    Cell: Table.NameRenderer\n  },\n  {\n    Header: \"Large Image\",\n    accessor: \"largeImage\",\n    Cell: Table.ImageRenderer\n  },\n  {\n    Header: \"Medium Image\",\n    accessor: \"mediumImage\",\n    Cell: Table.ImageRenderer\n  },\n  {\n    Header: \"Thumbnail Image\",\n    accessor: \"thumbnailImage\",\n    Cell: Table.ImageRenderer\n  },\n  {\n    Header: \"Coordinates\",\n    accessor: \"coordinates\",\n    Cell: Table.CoordinateRenderer\n  }\n];\n","import React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Marker(props) {\n  const { maps, map, position, onClick, details } = props || {};\n\n  const createMarker = useCallback(() => {\n    const marker = new maps.Marker({\n      // icon: markerPoint,\n      position,\n      map\n    });\n    return marker;\n  }, [maps, position, map]);\n\n  function removeMarker(marker) {\n    marker.setMap(null);\n  }\n\n  const onClickMarker = useCallback(() => {\n    onClick(details);\n  }, [details, onClick]);\n\n  useEffect(() => {\n    const marker = createMarker();\n    maps.event.addListener(marker, \"click\", onClickMarker);\n    return removeMarker.bind(null, marker);\n  }, [createMarker, maps, onClickMarker]);\n\n  return <div />;\n}\n\nMarker.defaultProps = {\n  onClick: () => {},\n  details: {}\n};\n\nMarker.propTypes = {\n  position: PropTypes.object,\n  map: PropTypes.object,\n  maps: PropTypes.object,\n  onClick: PropTypes.func,\n  details: PropTypes.shape()\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport mapsApi from \"google-maps-api\";\nimport Marker from \"./Marker\";\n\nconst GOOGLE_MAP_API_KEY = \"AIzaSyANDj4mJ2i_d0zRiNozVqbUGMgZTnDOeYI\";\n\nclass GoogleMaps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: props.center,\n      defaultZoom: 10\n    };\n  }\n\n  componentDidMount() {\n    this.initMap();\n  }\n\n  handleClickOnMap = (map) => {\n    const { allowClickOnMap } = this.props;\n    if (allowClickOnMap) {\n      map.addListener(\"click\", (evt) => {\n        const { latLng } = evt || {};\n        const position = { lat: latLng.lat(), lng: latLng.lng() };\n        this.props.onClickMap(position);\n      });\n    }\n  };\n\n  handleCreateMap = () => {\n    return mapsApi(GOOGLE_MAP_API_KEY)();\n  };\n\n  initMap = () => {\n    const { center, defaultZoom } = this.state;\n    this.handleCreateMap()\n      .then((maps) => {\n        const element = this.mapElement;\n        const map = new maps.Map(element, {\n          center: center,\n          zoom: defaultZoom,\n          streetViewControl: false\n        });\n        return { maps, map };\n      })\n      .then((config) => {\n        const { maps, map } = config || {};\n        this.setState({ maps, map });\n        this.handleClickOnMap(map);\n        this.props.onUpdateParent({ maps, map });\n      });\n  };\n\n  handleRef = (element) => {\n    this.mapElement = element;\n  };\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div ref={this.handleRef} id=\"map\" style={{ width, height }}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nGoogleMaps.defaultProps = {\n  onUpdateParent: () => {},\n  onClickMap: () => {},\n  allowClickOnMap: false,\n  width: \"100%\",\n  height: \"300px\",\n  center: { lat: 51.50853, lng: -0.12574 }\n};\n\nGoogleMaps.propTyeps = {\n  onUpdateParent: PropTypes.func,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  center: PropTypes.object,\n  allowClickOnMap: PropTypes.bool,\n  onClickMap: PropTypes.func\n};\n\nGoogleMaps.Marker = Marker;\n\nexport default GoogleMaps;\n","import React from \"react\";\nimport GoogleMaps from \"../../components/Map\";\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialised: false\n    };\n  }\n\n  getPointers = () => {\n    return this.props.markers;\n  };\n\n  handleSaveMapConfig = (config) => {\n    const { map, maps } = config || {};\n    this.setState(\n      {\n        map,\n        maps,\n        initialised: true\n      },\n      this.handleZoomToAllPointers\n    );\n  };\n\n  handleZoomToAllPointers = () => {\n    const { maps, map } = this.state;\n    const pointers = this.getPointers();\n    if (pointers.length === 1) {\n      map.setCenter(pointers[0]);\n      map.setZoom(pointers[0].zoom);\n    } else {\n      var bounds = new maps.LatLngBounds();\n      pointers.forEach((pointer) => bounds.extend(pointer));\n      map.fitBounds(bounds);\n    }\n  };\n\n  handleClickMarker = (details) => {\n    this.props.onClickMarker(details);\n  };\n\n  renderMarkers = () => {\n    const { initialised, maps, map } = this.state;\n    const markers = this.getPointers();\n    if (!initialised) return null;\n    return markers.map((marker) => (\n      <GoogleMaps.Marker\n        key={`${marker.lat}_${marker.lng}`}\n        maps={maps}\n        map={map}\n        position={marker}\n        onClick={this.handleClickMarker}\n        details={marker}\n      />\n    ));\n  };\n\n  render() {\n    const { center } = this.props;\n    return (\n      <div className=\"App\">\n        <GoogleMaps\n          center={center}\n          onUpdateParent={this.handleSaveMapConfig}\n          allowClickOnMap={false}\n          onClickMap={this.handleClickMap}\n        >\n          {this.renderMarkers()}\n        </GoogleMaps>\n      </div>\n    );\n  }\n}\n\nMap.defaultProps = {\n  markers: [],\n  center: { lat: 51.50853, lng: -0.12574 }\n};\n\nexport default Map;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Table from \"./components/Table\";\nimport { TABLE_CONFIG, USER_COUNT_TO_FETCH } from \"./constants\";\nimport Map from \"./modules/Map\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMarker: null,\n      markers: [],\n      initialised: false,\n      showTable: false,\n      tableData: [],\n      tableColumns: TABLE_CONFIG,\n      userCountsToFetch: USER_COUNT_TO_FETCH\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser().then((res) => {\n      const users = res.map(this.transformUserDetails);\n      this.setState({ markers: users, initialised: true });\n    });\n  }\n\n  transformUserDetails = (user) => {\n    const { name, location, picture, email } = user || {};\n    const lat = parseFloat(location?.coordinates?.latitude, 10);\n    const lng = parseFloat(location?.coordinates?.longitude, 10);\n    return {\n      id: email,\n      name: name?.first,\n      lat,\n      lng,\n      coordinates: { lat, lng },\n      largeImage: picture.large,\n      mediumImage: picture.medium,\n      thumbnailImage: picture.thumbnail,\n      zoom: 4\n    };\n  };\n\n  fetchUser = () => {\n    const { userCountsToFetch } = this.state;\n    return fetch(\n      `https://randomuser.me/api/?inc=location,name,picture,email&results=${userCountsToFetch}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (Array.isArray(res.results) && res.results.length) {\n          return res.results;\n        }\n        return [];\n      })\n      .catch((res) => []);\n  };\n\n  handleClickMarker = (activeMarker) => {\n    const tableData = [];\n    tableData.push(activeMarker);\n    this.setState({ activeMarker, tableData, showTable: true });\n  };\n\n  render() {\n    const {\n      initialised,\n      markers,\n      tableData,\n      tableColumns,\n      showTable\n    } = this.state;\n    if (!initialised) return <div>Loading</div>;\n    return (\n      <div className=\"App\">\n        <Header className=\"display-center\">\n          React Data Plotting Application\n        </Header>\n        <Map markers={markers} onClickMarker={this.handleClickMarker} />\n        {showTable && (\n          <Table\n            className=\"margin-top-10\"\n            data={tableData}\n            columns={tableColumns}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}